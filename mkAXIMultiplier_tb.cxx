/*
 * Generated by Bluespec Compiler (build e76ca21)
 * 
 * On Mon Dec 28 13:16:08 CET 2020
 * 
 */
#include "bluesim_primitives.h"
#include "mkAXIMultiplier_tb.h"


/* Literal declarations */
static unsigned int const UWide_literal_67_h2aaaaaaaaaaaaaaaa_arr[] = { 2863311530u,
									2863311530u,
									2u };
static tUWide const UWide_literal_67_h2aaaaaaaaaaaaaaaa(67u,
							UWide_literal_67_h2aaaaaaaaaaaaaaaa_arr);
static unsigned int const UWide_literal_108_h800000040000000000000005ff8_arr[] = { 24568u,
										   0u,
										   16384u,
										   2048u };
static tUWide const UWide_literal_108_h800000040000000000000005ff8(108u,
								   UWide_literal_108_h800000040000000000000005ff8_arr);
static unsigned int const UWide_literal_108_h800000000000000000000008ff8_arr[] = { 36856u,
										   0u,
										   0u,
										   2048u };
static tUWide const UWide_literal_108_h800000000000000000000008ff8(108u,
								   UWide_literal_108_h800000000000000000000008ff8_arr);
static unsigned int const UWide_literal_73_haaaaaaaaaaaaaaaaaa_arr[] = { 2863311530u,
									 2863311530u,
									 170u };
static tUWide const UWide_literal_73_haaaaaaaaaaaaaaaaaa(73u,
							 UWide_literal_73_haaaaaaaaaaaaaaaaaa_arr);
static unsigned int const UWide_literal_108_h2aaaaaaaaaaaaaaaaaaaaaaaaaa_arr[] = { 2863311530u,
										   2863311530u,
										   2863311530u,
										   682u };
static tUWide const UWide_literal_108_h2aaaaaaaaaaaaaaaaaaaaaaaaaa(108u,
								   UWide_literal_108_h2aaaaaaaaaaaaaaaaaaaaaaaaaa_arr);


/* String declarations */
static std::string const __str_literal_1("Product is: %d", 14u);


/* Constructor */
MOD_mkAXIMultiplier_tb::MOD_mkAXIMultiplier_tb(tSimStateHdl simHdl,
					       char const *name,
					       Module *parent)
  : Module(simHdl, name, parent),
    __clk_handle_0(BAD_CLOCK_HANDLE),
    INST_m_rd_araddrOut(simHdl, "m_rd_araddrOut", this, 32u, (tUInt8)0u),
    INST_m_rd_arprotOut(simHdl, "m_rd_arprotOut", this, 3u, (tUInt8)0u),
    INST_m_rd_arreadyIn(simHdl, "m_rd_arreadyIn", this, 1u, (tUInt8)0u),
    INST_m_rd_in_rv(simHdl, "m_rd_in_rv", this, 36u, 11453246122llu, (tUInt8)0u),
    INST_m_rd_isRst_isInReset(simHdl, "m_rd_isRst_isInReset", this, 1u, (tUInt8)1u, (tUInt8)1u),
    INST_m_rd_out_rv(simHdl,
		     "m_rd_out_rv",
		     this,
		     67u,
		     bs_wide_tmp(67u).set_bits_in_word(UWide_literal_67_h2aaaaaaaaaaaaaaaa.get_bits_in_word8(2u,
													     0u,
													     3u),
						       2u,
						       0u,
						       3u).set_whole_word(UWide_literal_67_h2aaaaaaaaaaaaaaaa.get_whole_word(1u),
									  1u).set_whole_word(UWide_literal_67_h2aaaaaaaaaaaaaaaa.get_whole_word(0u),
											     0u),
		     (tUInt8)0u),
    INST_m_rd_rdataIn(simHdl, "m_rd_rdataIn", this, 64u, (tUInt8)0u),
    INST_m_rd_rrespIn(simHdl, "m_rd_rrespIn", this, 2u, (tUInt8)0u),
    INST_m_rd_rvalidIn(simHdl, "m_rd_rvalidIn", this, 1u, (tUInt8)0u),
    INST_m_wr_addrOut_rv(simHdl, "m_wr_addrOut_rv", this, 36u, 11453246122llu, (tUInt8)0u),
    INST_m_wr_awaddrOut(simHdl, "m_wr_awaddrOut", this, 32u, (tUInt8)0u),
    INST_m_wr_awprotOut(simHdl, "m_wr_awprotOut", this, 3u, (tUInt8)0u),
    INST_m_wr_awreadyIn(simHdl, "m_wr_awreadyIn", this, 1u, (tUInt8)0u),
    INST_m_wr_brespIn(simHdl, "m_wr_brespIn", this, 2u, (tUInt8)0u),
    INST_m_wr_bvalidIn(simHdl, "m_wr_bvalidIn", this, 1u, (tUInt8)0u),
    INST_m_wr_dataOut_rv(simHdl,
			 "m_wr_dataOut_rv",
			 this,
			 73u,
			 bs_wide_tmp(73u).set_bits_in_word(UWide_literal_73_haaaaaaaaaaaaaaaaaa.get_bits_in_word32(2u,
														   0u,
														   9u),
							   2u,
							   0u,
							   9u).set_whole_word(UWide_literal_73_haaaaaaaaaaaaaaaaaa.get_whole_word(1u),
									      1u).set_whole_word(UWide_literal_73_haaaaaaaaaaaaaaaaaa.get_whole_word(0u),
												 0u),
			 (tUInt8)0u),
    INST_m_wr_in_rv(simHdl,
		    "m_wr_in_rv",
		    this,
		    108u,
		    bs_wide_tmp(108u).set_bits_in_word(UWide_literal_108_h2aaaaaaaaaaaaaaaaaaaaaaaaaa.get_bits_in_word32(3u,
															 0u,
															 12u),
						       3u,
						       0u,
						       12u).set_whole_word(UWide_literal_108_h2aaaaaaaaaaaaaaaaaaaaaaaaaa.get_whole_word(2u),
									   2u).set_whole_word(UWide_literal_108_h2aaaaaaaaaaaaaaaaaaaaaaaaaa.get_whole_word(1u),
											      1u).set_whole_word(UWide_literal_108_h2aaaaaaaaaaaaaaaaaaaaaaaaaa.get_whole_word(0u),
														 0u),
		    (tUInt8)0u),
    INST_m_wr_isRst_isInReset(simHdl, "m_wr_isRst_isInReset", this, 1u, (tUInt8)1u, (tUInt8)1u),
    INST_m_wr_out_rv(simHdl, "m_wr_out_rv", this, 3u, (tUInt8)2u, (tUInt8)0u),
    INST_m_wr_wdataOut(simHdl, "m_wr_wdataOut", this, 64u, (tUInt8)0u),
    INST_m_wr_wreadyIn(simHdl, "m_wr_wreadyIn", this, 1u, (tUInt8)0u),
    INST_m_wr_wstrbOut(simHdl, "m_wr_wstrbOut", this, 8u, (tUInt8)0u),
    INST_s_mul(simHdl, "s_mul", this),
    INST_testState(simHdl, "testState", this, 8u, (tUInt8)0u, (tUInt8)0u),
    PORT_RST_N((tUInt8)1u),
    DEF_m_wr_in_rv_port1__read____d21(108u),
    DEF_m_wr_in_rv_port0__read____d92(108u),
    DEF_m_wr_dataOut_rv_port1__read____d45(73u),
    DEF_m_wr_dataOut_rv_port0__read____d26(73u),
    DEF_m_rd_out_rv_port1__read____d113(67u),
    DEF_m_rd_out_rv_port0__read____d11(67u),
    DEF_m_wr_in_rv_port1__read__1_BITS_74_TO_3___d35(72u),
    DEF__0_CONCAT_DONTCARE___d31(108u),
    DEF__1_CONCAT_m_wr_in_rv_port1__read__1_BITS_74_TO_3_5___d36(73u),
    DEF__0_CONCAT_DONTCARE___d50(73u),
    DEF__1_CONCAT_m_rd_rdataIn_wget__7_CONCAT_m_rd_rres_ETC___d19(67u),
    DEF__0_CONCAT_DONTCARE___d117(67u)
{
  symbol_count = 61u;
  symbols = new tSym[symbol_count];
  init_symbols_0();
}


/* Symbol init fns */

void MOD_mkAXIMultiplier_tb::init_symbols_0()
{
  init_symbol(&symbols[0u], "b__h4068", SYM_DEF, &DEF_b__h4068, 8u);
  init_symbol(&symbols[1u], "m_rd_araddrOut", SYM_MODULE, &INST_m_rd_araddrOut);
  init_symbol(&symbols[2u], "m_rd_arprotOut", SYM_MODULE, &INST_m_rd_arprotOut);
  init_symbol(&symbols[3u], "m_rd_arreadyIn", SYM_MODULE, &INST_m_rd_arreadyIn);
  init_symbol(&symbols[4u], "m_rd_in_rv", SYM_MODULE, &INST_m_rd_in_rv);
  init_symbol(&symbols[5u], "m_rd_isRst_isInReset", SYM_MODULE, &INST_m_rd_isRst_isInReset);
  init_symbol(&symbols[6u],
	      "m_rd_isRst_isInReset__h119",
	      SYM_DEF,
	      &DEF_m_rd_isRst_isInReset__h119,
	      1u);
  init_symbol(&symbols[7u], "m_rd_out_rv", SYM_MODULE, &INST_m_rd_out_rv);
  init_symbol(&symbols[8u], "m_rd_rdataIn", SYM_MODULE, &INST_m_rd_rdataIn);
  init_symbol(&symbols[9u], "m_rd_rrespIn", SYM_MODULE, &INST_m_rd_rrespIn);
  init_symbol(&symbols[10u], "m_rd_rvalidIn", SYM_MODULE, &INST_m_rd_rvalidIn);
  init_symbol(&symbols[11u], "m_wr_addrOut_rv", SYM_MODULE, &INST_m_wr_addrOut_rv);
  init_symbol(&symbols[12u], "m_wr_awaddrOut", SYM_MODULE, &INST_m_wr_awaddrOut);
  init_symbol(&symbols[13u], "m_wr_awprotOut", SYM_MODULE, &INST_m_wr_awprotOut);
  init_symbol(&symbols[14u], "m_wr_awreadyIn", SYM_MODULE, &INST_m_wr_awreadyIn);
  init_symbol(&symbols[15u], "m_wr_brespIn", SYM_MODULE, &INST_m_wr_brespIn);
  init_symbol(&symbols[16u], "m_wr_bvalidIn", SYM_MODULE, &INST_m_wr_bvalidIn);
  init_symbol(&symbols[17u], "m_wr_dataOut_rv", SYM_MODULE, &INST_m_wr_dataOut_rv);
  init_symbol(&symbols[18u], "m_wr_in_rv", SYM_MODULE, &INST_m_wr_in_rv);
  init_symbol(&symbols[19u], "m_wr_isRst_isInReset", SYM_MODULE, &INST_m_wr_isRst_isInReset);
  init_symbol(&symbols[20u],
	      "m_wr_isRst_isInReset__h1294",
	      SYM_DEF,
	      &DEF_m_wr_isRst_isInReset__h1294,
	      1u);
  init_symbol(&symbols[21u], "m_wr_out_rv", SYM_MODULE, &INST_m_wr_out_rv);
  init_symbol(&symbols[22u], "m_wr_wdataOut", SYM_MODULE, &INST_m_wr_wdataOut);
  init_symbol(&symbols[23u], "m_wr_wreadyIn", SYM_MODULE, &INST_m_wr_wreadyIn);
  init_symbol(&symbols[24u], "m_wr_wstrbOut", SYM_MODULE, &INST_m_wr_wstrbOut);
  init_symbol(&symbols[25u], "RL_forward1", SYM_RULE);
  init_symbol(&symbols[26u], "RL_forward10", SYM_RULE);
  init_symbol(&symbols[27u], "RL_forward11", SYM_RULE);
  init_symbol(&symbols[28u], "RL_forward1_1", SYM_RULE);
  init_symbol(&symbols[29u], "RL_forward2", SYM_RULE);
  init_symbol(&symbols[30u], "RL_forward2_1", SYM_RULE);
  init_symbol(&symbols[31u], "RL_forward3", SYM_RULE);
  init_symbol(&symbols[32u], "RL_forward3_1", SYM_RULE);
  init_symbol(&symbols[33u], "RL_forward4", SYM_RULE);
  init_symbol(&symbols[34u], "RL_forward4_1", SYM_RULE);
  init_symbol(&symbols[35u], "RL_forward5", SYM_RULE);
  init_symbol(&symbols[36u], "RL_forward5_1", SYM_RULE);
  init_symbol(&symbols[37u], "RL_forward6", SYM_RULE);
  init_symbol(&symbols[38u], "RL_forward6_1", SYM_RULE);
  init_symbol(&symbols[39u], "RL_forward7", SYM_RULE);
  init_symbol(&symbols[40u], "RL_forward7_1", SYM_RULE);
  init_symbol(&symbols[41u], "RL_forward8", SYM_RULE);
  init_symbol(&symbols[42u], "RL_forward8_1", SYM_RULE);
  init_symbol(&symbols[43u], "RL_forward9", SYM_RULE);
  init_symbol(&symbols[44u], "RL_m_rd_deqIn", SYM_RULE);
  init_symbol(&symbols[45u], "RL_m_rd_enqOut", SYM_RULE);
  init_symbol(&symbols[46u], "RL_m_rd_forwardIn", SYM_RULE);
  init_symbol(&symbols[47u], "RL_m_rd_isRst_isResetAssertedUpdate", SYM_RULE);
  init_symbol(&symbols[48u], "RL_m_wr_deqAddr", SYM_RULE);
  init_symbol(&symbols[49u], "RL_m_wr_deqData", SYM_RULE);
  init_symbol(&symbols[50u], "RL_m_wr_forwardAddr", SYM_RULE);
  init_symbol(&symbols[51u], "RL_m_wr_forwardData", SYM_RULE);
  init_symbol(&symbols[52u], "RL_m_wr_forwardResp", SYM_RULE);
  init_symbol(&symbols[53u], "RL_m_wr_isRst_isResetAssertedUpdate", SYM_RULE);
  init_symbol(&symbols[54u], "RL_m_wr_splitAddrData", SYM_RULE);
  init_symbol(&symbols[55u], "RL_read_register3", SYM_RULE);
  init_symbol(&symbols[56u], "RL_read_register4", SYM_RULE);
  init_symbol(&symbols[57u], "RL_write_register1", SYM_RULE);
  init_symbol(&symbols[58u], "RL_write_register2", SYM_RULE);
  init_symbol(&symbols[59u], "s_mul", SYM_MODULE, &INST_s_mul);
  init_symbol(&symbols[60u], "testState", SYM_MODULE, &INST_testState);
}


/* Rule actions */

void MOD_mkAXIMultiplier_tb::RL_m_rd_isRst_isResetAssertedUpdate()
{
  INST_m_rd_isRst_isInReset.METH_write((tUInt8)0u);
}

void MOD_mkAXIMultiplier_tb::RL_m_rd_deqIn()
{
  DEF__0_CONCAT_DONTCARE___d8 = 11453246122llu;
  INST_m_rd_in_rv.METH_port1__write(DEF__0_CONCAT_DONTCARE___d8);
}

void MOD_mkAXIMultiplier_tb::RL_m_rd_forwardIn()
{
  tUInt8 DEF_m_rd_in_rv_port1__read_BITS_2_TO_0___d10;
  tUInt32 DEF_new_value__h896;
  DEF_m_rd_in_rv_port1__read____d2 = INST_m_rd_in_rv.METH_port1__read();
  DEF_new_value__h896 = (tUInt32)(DEF_m_rd_in_rv_port1__read____d2 >> 3u);
  DEF_m_rd_in_rv_port1__read_BITS_2_TO_0___d10 = (tUInt8)((tUInt8)7u & DEF_m_rd_in_rv_port1__read____d2);
  INST_m_rd_araddrOut.METH_wset(DEF_new_value__h896);
  INST_m_rd_arprotOut.METH_wset(DEF_m_rd_in_rv_port1__read_BITS_2_TO_0___d10);
}

void MOD_mkAXIMultiplier_tb::RL_m_rd_enqOut()
{
  tUInt64 DEF_v_data__h1211;
  DEF_v_data__h1211 = INST_m_rd_rdataIn.METH_wget();
  DEF__1_CONCAT_m_rd_rdataIn_wget__7_CONCAT_m_rd_rres_ETC___d19.set_bits_in_word((tUInt8)7u & (((tUInt8)1u << 2u) | (tUInt8)(DEF_v_data__h1211 >> 62u)),
										 2u,
										 0u,
										 3u).set_whole_word((tUInt32)(DEF_v_data__h1211 >> 30u),
												    1u).set_whole_word((((tUInt32)(1073741823u & DEF_v_data__h1211)) << 2u) | (tUInt32)(INST_m_rd_rrespIn.METH_wget()),
														       0u);
  INST_m_rd_out_rv.METH_port0__write(DEF__1_CONCAT_m_rd_rdataIn_wget__7_CONCAT_m_rd_rres_ETC___d19);
}

void MOD_mkAXIMultiplier_tb::RL_m_wr_isRst_isResetAssertedUpdate()
{
  INST_m_wr_isRst_isInReset.METH_write((tUInt8)0u);
}

void MOD_mkAXIMultiplier_tb::RL_m_wr_splitAddrData()
{
  tUInt64 DEF__1_CONCAT_m_wr_in_rv_port1__read__1_BITS_106_TO_ETC___d34;
  tUInt32 DEF_x__h2393;
  DEF_m_wr_in_rv_port1__read____d21 = INST_m_wr_in_rv.METH_port1__read();
  wop_primExtractWide(72u,
		      108u,
		      DEF_m_wr_in_rv_port1__read____d21,
		      32u,
		      74u,
		      32u,
		      3u,
		      DEF_m_wr_in_rv_port1__read__1_BITS_74_TO_3___d35);
  DEF_x__h2393 = primExtract32(32u, 108u, DEF_m_wr_in_rv_port1__read____d21, 32u, 106u, 32u, 75u);
  DEF__0_CONCAT_DONTCARE___d31.set_bits_in_word(UWide_literal_108_h2aaaaaaaaaaaaaaaaaaaaaaaaaa.get_bits_in_word32(3u,
														  0u,
														  12u),
						3u,
						0u,
						12u).set_whole_word(UWide_literal_108_h2aaaaaaaaaaaaaaaaaaaaaaaaaa.get_whole_word(2u),
								    2u).set_whole_word(UWide_literal_108_h2aaaaaaaaaaaaaaaaaaaaaaaaaa.get_whole_word(1u),
										       1u).set_whole_word(UWide_literal_108_h2aaaaaaaaaaaaaaaaaaaaaaaaaa.get_whole_word(0u),
													  0u);
  DEF__1_CONCAT_m_wr_in_rv_port1__read__1_BITS_74_TO_3_5___d36.set_bits_in_word(511u & ((((tUInt32)((tUInt8)1u)) << 8u) | (tUInt32)(DEF_m_wr_in_rv_port1__read__1_BITS_74_TO_3___d35.get_bits_in_word8(2u,
																								       0u,
																								       8u))),
										2u,
										0u,
										9u).set_whole_word(DEF_m_wr_in_rv_port1__read__1_BITS_74_TO_3___d35.get_whole_word(1u),
												   1u).set_whole_word(DEF_m_wr_in_rv_port1__read__1_BITS_74_TO_3___d35.get_whole_word(0u),
														      0u);
  DEF__1_CONCAT_m_wr_in_rv_port1__read__1_BITS_106_TO_ETC___d34 = 68719476735llu & (((((tUInt64)((tUInt8)1u)) << 35u) | (((tUInt64)(DEF_x__h2393)) << 3u)) | (tUInt64)(DEF_m_wr_in_rv_port1__read____d21.get_bits_in_word8(0u,
																											   0u,
																											   3u)));
  INST_m_wr_in_rv.METH_port1__write(DEF__0_CONCAT_DONTCARE___d31);
  INST_m_wr_addrOut_rv.METH_port0__write(DEF__1_CONCAT_m_wr_in_rv_port1__read__1_BITS_106_TO_ETC___d34);
  INST_m_wr_dataOut_rv.METH_port0__write(DEF__1_CONCAT_m_wr_in_rv_port1__read__1_BITS_74_TO_3_5___d36);
}

void MOD_mkAXIMultiplier_tb::RL_m_wr_deqAddr()
{
  DEF__0_CONCAT_DONTCARE___d8 = 11453246122llu;
  INST_m_wr_addrOut_rv.METH_port1__write(DEF__0_CONCAT_DONTCARE___d8);
}

void MOD_mkAXIMultiplier_tb::RL_m_wr_forwardAddr()
{
  tUInt8 DEF_m_wr_addrOut_rv_port1__read__7_BITS_2_TO_0___d44;
  tUInt32 DEF_new_value__h2839;
  DEF_m_wr_addrOut_rv_port1__read____d37 = INST_m_wr_addrOut_rv.METH_port1__read();
  DEF_new_value__h2839 = (tUInt32)(DEF_m_wr_addrOut_rv_port1__read____d37 >> 3u);
  DEF_m_wr_addrOut_rv_port1__read__7_BITS_2_TO_0___d44 = (tUInt8)((tUInt8)7u & DEF_m_wr_addrOut_rv_port1__read____d37);
  INST_m_wr_awaddrOut.METH_wset(DEF_new_value__h2839);
  INST_m_wr_awprotOut.METH_wset(DEF_m_wr_addrOut_rv_port1__read__7_BITS_2_TO_0___d44);
}

void MOD_mkAXIMultiplier_tb::RL_m_wr_deqData()
{
  DEF__0_CONCAT_DONTCARE___d50.set_bits_in_word(UWide_literal_73_haaaaaaaaaaaaaaaaaa.get_bits_in_word32(2u,
													0u,
													9u),
						2u,
						0u,
						9u).set_whole_word(UWide_literal_73_haaaaaaaaaaaaaaaaaa.get_whole_word(1u),
								   1u).set_whole_word(UWide_literal_73_haaaaaaaaaaaaaaaaaa.get_whole_word(0u),
										      0u);
  INST_m_wr_dataOut_rv.METH_port1__write(DEF__0_CONCAT_DONTCARE___d50);
}

void MOD_mkAXIMultiplier_tb::RL_m_wr_forwardData()
{
  tUInt8 DEF_new_value__h3234;
  tUInt64 DEF_new_value__h3195;
  DEF_m_wr_dataOut_rv_port1__read____d45 = INST_m_wr_dataOut_rv.METH_port1__read();
  DEF_new_value__h3195 = primExtract64(64u,
				       73u,
				       DEF_m_wr_dataOut_rv_port1__read____d45,
				       32u,
				       71u,
				       32u,
				       8u);
  DEF_new_value__h3234 = DEF_m_wr_dataOut_rv_port1__read____d45.get_bits_in_word8(0u, 0u, 8u);
  INST_m_wr_wdataOut.METH_wset(DEF_new_value__h3195);
  INST_m_wr_wstrbOut.METH_wset(DEF_new_value__h3234);
}

void MOD_mkAXIMultiplier_tb::RL_m_wr_forwardResp()
{
  tUInt8 DEF__1_CONCAT_m_wr_brespIn_wget__9___d60;
  DEF__1_CONCAT_m_wr_brespIn_wget__9___d60 = (tUInt8)7u & (((tUInt8)1u << 2u) | INST_m_wr_brespIn.METH_wget());
  INST_m_wr_out_rv.METH_port0__write(DEF__1_CONCAT_m_wr_brespIn_wget__9___d60);
}

void MOD_mkAXIMultiplier_tb::RL_forward1()
{
  tUInt8 DEF_NOT_m_rd_isRst_isInReset_AND_m_rd_in_rv_port1__ETC___d61;
  DEF_m_rd_isRst_isInReset__h119 = INST_m_rd_isRst_isInReset.METH_read();
  DEF_m_rd_in_rv_port1__read____d2 = INST_m_rd_in_rv.METH_port1__read();
  DEF_m_rd_in_rv_port1__read_BIT_35___d3 = (tUInt8)(DEF_m_rd_in_rv_port1__read____d2 >> 35u);
  DEF_NOT_m_rd_isRst_isInReset___d4 = !DEF_m_rd_isRst_isInReset__h119;
  DEF_NOT_m_rd_isRst_isInReset_AND_m_rd_in_rv_port1__ETC___d61 = DEF_NOT_m_rd_isRst_isInReset___d4 && DEF_m_rd_in_rv_port1__read_BIT_35___d3;
  INST_s_mul.METH_slave_read_fab_parvalid(DEF_NOT_m_rd_isRst_isInReset_AND_m_rd_in_rv_port1__ETC___d61);
}

void MOD_mkAXIMultiplier_tb::RL_forward2()
{
  tUInt8 DEF_s_mul_slave_read_fab_arready____d62;
  DEF_s_mul_slave_read_fab_arready____d62 = INST_s_mul.METH_slave_read_fab_arready();
  INST_m_rd_arreadyIn.METH_wset(DEF_s_mul_slave_read_fab_arready____d62);
}

void MOD_mkAXIMultiplier_tb::RL_forward3()
{
  tUInt32 DEF_araddr__h3712;
  tUInt32 DEF_x_wget__h696;
  DEF_x_wget__h696 = INST_m_rd_araddrOut.METH_wget();
  DEF_araddr__h3712 = INST_m_rd_araddrOut.METH_whas() ? DEF_x_wget__h696 : 0u;
  INST_s_mul.METH_slave_read_fab_paraddr(DEF_araddr__h3712);
}

void MOD_mkAXIMultiplier_tb::RL_forward4()
{
  tUInt8 DEF_IF_m_rd_arprotOut_whas__6_THEN_m_rd_arprotOut__ETC___d68;
  DEF_IF_m_rd_arprotOut_whas__6_THEN_m_rd_arprotOut__ETC___d68 = INST_m_rd_arprotOut.METH_whas() ? INST_m_rd_arprotOut.METH_wget() : (tUInt8)0u;
  INST_s_mul.METH_slave_read_fab_parprot(DEF_IF_m_rd_arprotOut_whas__6_THEN_m_rd_arprotOut__ETC___d68);
}

void MOD_mkAXIMultiplier_tb::RL_forward5()
{
  tUInt8 DEF_NOT_m_rd_isRst_isInReset_AND_NOT_m_rd_out_rv_p_ETC___d69;
  DEF_m_rd_isRst_isInReset__h119 = INST_m_rd_isRst_isInReset.METH_read();
  DEF_m_rd_out_rv_port0__read____d11 = INST_m_rd_out_rv.METH_port0__read();
  DEF_NOT_m_rd_out_rv_port0__read__1_BIT_66_2___d13 = !DEF_m_rd_out_rv_port0__read____d11.get_bits_in_word8(2u,
													    2u,
													    1u);
  DEF_NOT_m_rd_isRst_isInReset___d4 = !DEF_m_rd_isRst_isInReset__h119;
  DEF_NOT_m_rd_isRst_isInReset_AND_NOT_m_rd_out_rv_p_ETC___d69 = DEF_NOT_m_rd_isRst_isInReset___d4 && DEF_NOT_m_rd_out_rv_port0__read__1_BIT_66_2___d13;
  INST_s_mul.METH_slave_read_fab_prready(DEF_NOT_m_rd_isRst_isInReset_AND_NOT_m_rd_out_rv_p_ETC___d69);
}

void MOD_mkAXIMultiplier_tb::RL_forward6()
{
  tUInt8 DEF_s_mul_slave_read_fab_rvalid____d70;
  DEF_s_mul_slave_read_fab_rvalid____d70 = INST_s_mul.METH_slave_read_fab_rvalid();
  INST_m_rd_rvalidIn.METH_wset(DEF_s_mul_slave_read_fab_rvalid____d70);
}

void MOD_mkAXIMultiplier_tb::RL_forward7()
{
  tUInt64 DEF_x1__h3780;
  DEF_x1__h3780 = INST_s_mul.METH_slave_read_fab_rdata();
  INST_m_rd_rdataIn.METH_wset(DEF_x1__h3780);
}

void MOD_mkAXIMultiplier_tb::RL_forward8()
{
  tUInt8 DEF_s_mul_slave_read_fab_rresp____d72;
  DEF_s_mul_slave_read_fab_rresp____d72 = INST_s_mul.METH_slave_read_fab_rresp();
  INST_m_rd_rrespIn.METH_wset(DEF_s_mul_slave_read_fab_rresp____d72);
}

void MOD_mkAXIMultiplier_tb::RL_forward1_1()
{
  tUInt8 DEF_s_mul_slave_write_fab_awready____d73;
  DEF_s_mul_slave_write_fab_awready____d73 = INST_s_mul.METH_slave_write_fab_awready();
  INST_m_wr_awreadyIn.METH_wset(DEF_s_mul_slave_write_fab_awready____d73);
}

void MOD_mkAXIMultiplier_tb::RL_forward2_1()
{
  tUInt8 DEF_NOT_m_wr_isRst_isInReset_0_9_AND_m_wr_addrOut__ETC___d74;
  DEF_m_wr_isRst_isInReset__h1294 = INST_m_wr_isRst_isInReset.METH_read();
  DEF_m_wr_addrOut_rv_port1__read____d37 = INST_m_wr_addrOut_rv.METH_port1__read();
  DEF_m_wr_addrOut_rv_port1__read__7_BIT_35___d38 = (tUInt8)(DEF_m_wr_addrOut_rv_port1__read____d37 >> 35u);
  DEF_NOT_m_wr_isRst_isInReset_0___d39 = !DEF_m_wr_isRst_isInReset__h1294;
  DEF_NOT_m_wr_isRst_isInReset_0_9_AND_m_wr_addrOut__ETC___d74 = DEF_NOT_m_wr_isRst_isInReset_0___d39 && DEF_m_wr_addrOut_rv_port1__read__7_BIT_35___d38;
  INST_s_mul.METH_slave_write_fab_pawvalid(DEF_NOT_m_wr_isRst_isInReset_0_9_AND_m_wr_addrOut__ETC___d74);
}

void MOD_mkAXIMultiplier_tb::RL_forward3_1()
{
  tUInt32 DEF_awaddr__h3893;
  tUInt32 DEF_x_wget__h2650;
  DEF_x_wget__h2650 = INST_m_wr_awaddrOut.METH_wget();
  DEF_awaddr__h3893 = INST_m_wr_awaddrOut.METH_whas() ? DEF_x_wget__h2650 : 0u;
  INST_s_mul.METH_slave_write_fab_pawaddr(DEF_awaddr__h3893);
}

void MOD_mkAXIMultiplier_tb::RL_forward4_1()
{
  tUInt8 DEF_IF_m_wr_awprotOut_whas__8_THEN_m_wr_awprotOut__ETC___d80;
  DEF_IF_m_wr_awprotOut_whas__8_THEN_m_wr_awprotOut__ETC___d80 = INST_m_wr_awprotOut.METH_whas() ? INST_m_wr_awprotOut.METH_wget() : (tUInt8)0u;
  INST_s_mul.METH_slave_write_fab_pawprot(DEF_IF_m_wr_awprotOut_whas__8_THEN_m_wr_awprotOut__ETC___d80);
}

void MOD_mkAXIMultiplier_tb::RL_forward5_1()
{
  tUInt8 DEF_s_mul_slave_write_fab_wready____d81;
  DEF_s_mul_slave_write_fab_wready____d81 = INST_s_mul.METH_slave_write_fab_wready();
  INST_m_wr_wreadyIn.METH_wset(DEF_s_mul_slave_write_fab_wready____d81);
}

void MOD_mkAXIMultiplier_tb::RL_forward6_1()
{
  tUInt8 DEF_NOT_m_wr_isRst_isInReset_0_9_AND_m_wr_dataOut__ETC___d82;
  DEF_m_wr_isRst_isInReset__h1294 = INST_m_wr_isRst_isInReset.METH_read();
  DEF_m_wr_dataOut_rv_port1__read____d45 = INST_m_wr_dataOut_rv.METH_port1__read();
  DEF_m_wr_dataOut_rv_port1__read__5_BIT_72___d46 = DEF_m_wr_dataOut_rv_port1__read____d45.get_bits_in_word8(2u,
													     8u,
													     1u);
  DEF_NOT_m_wr_isRst_isInReset_0___d39 = !DEF_m_wr_isRst_isInReset__h1294;
  DEF_NOT_m_wr_isRst_isInReset_0_9_AND_m_wr_dataOut__ETC___d82 = DEF_NOT_m_wr_isRst_isInReset_0___d39 && DEF_m_wr_dataOut_rv_port1__read__5_BIT_72___d46;
  INST_s_mul.METH_slave_write_fab_pwvalid(DEF_NOT_m_wr_isRst_isInReset_0_9_AND_m_wr_dataOut__ETC___d82);
}

void MOD_mkAXIMultiplier_tb::RL_forward7_1()
{
  tUInt64 DEF_wdata__h3961;
  tUInt64 DEF_x_wget__h3005;
  DEF_x_wget__h3005 = INST_m_wr_wdataOut.METH_wget();
  DEF_wdata__h3961 = INST_m_wr_wdataOut.METH_whas() ? DEF_x_wget__h3005 : 0llu;
  INST_s_mul.METH_slave_write_fab_pwdata(DEF_wdata__h3961);
}

void MOD_mkAXIMultiplier_tb::RL_forward8_1()
{
  tUInt8 DEF_wstrb__h3981;
  tUInt8 DEF_x_wget__h3077;
  DEF_x_wget__h3077 = INST_m_wr_wstrbOut.METH_wget();
  DEF_wstrb__h3981 = INST_m_wr_wstrbOut.METH_whas() ? DEF_x_wget__h3077 : (tUInt8)0u;
  INST_s_mul.METH_slave_write_fab_pwstrb(DEF_wstrb__h3981);
}

void MOD_mkAXIMultiplier_tb::RL_forward9()
{
  tUInt8 DEF_s_mul_slave_write_fab_bvalid____d89;
  DEF_s_mul_slave_write_fab_bvalid____d89 = INST_s_mul.METH_slave_write_fab_bvalid();
  INST_m_wr_bvalidIn.METH_wset(DEF_s_mul_slave_write_fab_bvalid____d89);
}

void MOD_mkAXIMultiplier_tb::RL_forward10()
{
  tUInt8 DEF_NOT_m_wr_isRst_isInReset_0_9_AND_NOT_m_wr_out__ETC___d90;
  DEF_m_wr_isRst_isInReset__h1294 = INST_m_wr_isRst_isInReset.METH_read();
  DEF_NOT_m_wr_out_rv_port0__read__3_BIT_2_4___d55 = !((tUInt8)(INST_m_wr_out_rv.METH_port0__read() >> 2u));
  DEF_NOT_m_wr_isRst_isInReset_0___d39 = !DEF_m_wr_isRst_isInReset__h1294;
  DEF_NOT_m_wr_isRst_isInReset_0_9_AND_NOT_m_wr_out__ETC___d90 = DEF_NOT_m_wr_isRst_isInReset_0___d39 && DEF_NOT_m_wr_out_rv_port0__read__3_BIT_2_4___d55;
  INST_s_mul.METH_slave_write_fab_pbready(DEF_NOT_m_wr_isRst_isInReset_0_9_AND_NOT_m_wr_out__ETC___d90);
}

void MOD_mkAXIMultiplier_tb::RL_forward11()
{
  tUInt8 DEF_s_mul_slave_write_fab_bresp____d91;
  DEF_s_mul_slave_write_fab_bresp____d91 = INST_s_mul.METH_slave_write_fab_bresp();
  INST_m_wr_brespIn.METH_wset(DEF_s_mul_slave_write_fab_bresp____d91);
}

void MOD_mkAXIMultiplier_tb::RL_write_register1()
{
  DEF_b__h4068 = INST_testState.METH_read();
  DEF_testState_5_PLUS_1___d98 = (tUInt8)255u & (DEF_b__h4068 + (tUInt8)1u);
  INST_m_wr_in_rv.METH_port0__write(UWide_literal_108_h800000000000000000000008ff8);
  INST_testState.METH_write(DEF_testState_5_PLUS_1___d98);
}

void MOD_mkAXIMultiplier_tb::RL_write_register2()
{
  DEF_b__h4068 = INST_testState.METH_read();
  DEF_m_wr_out_rv_port1__read____d99 = INST_m_wr_out_rv.METH_port1__read();
  DEF_m_wr_out_rv_port1__read__9_BITS_1_TO_0_05_EQ_0___d106 = ((tUInt8)((tUInt8)3u & DEF_m_wr_out_rv_port1__read____d99)) == (tUInt8)0u;
  DEF_testState_5_PLUS_1___d98 = (tUInt8)255u & (DEF_b__h4068 + (tUInt8)1u);
  DEF__0_CONCAT_DONTCARE___d104 = (tUInt8)2u;
  INST_m_wr_out_rv.METH_port1__write(DEF__0_CONCAT_DONTCARE___d104);
  if (DEF_m_wr_out_rv_port1__read__9_BITS_1_TO_0_05_EQ_0___d106)
    INST_m_wr_in_rv.METH_port0__write(UWide_literal_108_h800000040000000000000005ff8);
  if (DEF_m_wr_out_rv_port1__read__9_BITS_1_TO_0_05_EQ_0___d106)
    INST_testState.METH_write(DEF_testState_5_PLUS_1___d98);
}

void MOD_mkAXIMultiplier_tb::RL_read_register3()
{
  DEF_b__h4068 = INST_testState.METH_read();
  DEF_m_wr_out_rv_port1__read____d99 = INST_m_wr_out_rv.METH_port1__read();
  DEF_m_wr_out_rv_port1__read__9_BITS_1_TO_0_05_EQ_0___d106 = ((tUInt8)((tUInt8)3u & DEF_m_wr_out_rv_port1__read____d99)) == (tUInt8)0u;
  DEF_testState_5_PLUS_1___d98 = (tUInt8)255u & (DEF_b__h4068 + (tUInt8)1u);
  DEF__0_CONCAT_DONTCARE___d104 = (tUInt8)2u;
  INST_m_wr_out_rv.METH_port1__write(DEF__0_CONCAT_DONTCARE___d104);
  if (DEF_m_wr_out_rv_port1__read__9_BITS_1_TO_0_05_EQ_0___d106)
    INST_m_rd_in_rv.METH_port0__write(34359738496llu);
  if (DEF_m_wr_out_rv_port1__read__9_BITS_1_TO_0_05_EQ_0___d106)
    INST_testState.METH_write(DEF_testState_5_PLUS_1___d98);
}

void MOD_mkAXIMultiplier_tb::RL_read_register4()
{
  tUInt64 DEF_v__h4580;
  DEF_m_rd_out_rv_port1__read____d113 = INST_m_rd_out_rv.METH_port1__read();
  DEF_v__h4580 = primExtract64(64u, 67u, DEF_m_rd_out_rv_port1__read____d113, 32u, 65u, 32u, 2u);
  DEF__0_CONCAT_DONTCARE___d117.set_bits_in_word(UWide_literal_67_h2aaaaaaaaaaaaaaaa.get_bits_in_word8(2u,
												       0u,
												       3u),
						 2u,
						 0u,
						 3u).set_whole_word(UWide_literal_67_h2aaaaaaaaaaaaaaaa.get_whole_word(1u),
								    1u).set_whole_word(UWide_literal_67_h2aaaaaaaaaaaaaaaa.get_whole_word(0u),
										       0u);
  INST_m_rd_out_rv.METH_port1__write(DEF__0_CONCAT_DONTCARE___d117);
  if (!(PORT_RST_N == (tUInt8)0u))
    dollar_display(sim_hdl, this, "s,64", &__str_literal_1, DEF_v__h4580);
}


/* Methods */


/* Reset routines */

void MOD_mkAXIMultiplier_tb::reset_RST_N(tUInt8 ARG_rst_in)
{
  PORT_RST_N = ARG_rst_in;
  INST_testState.reset_RST(ARG_rst_in);
  INST_s_mul.reset_aresetn(ARG_rst_in);
  INST_m_wr_out_rv.reset_RST(ARG_rst_in);
  INST_m_wr_isRst_isInReset.reset_RST(ARG_rst_in);
  INST_m_wr_in_rv.reset_RST(ARG_rst_in);
  INST_m_wr_dataOut_rv.reset_RST(ARG_rst_in);
  INST_m_wr_addrOut_rv.reset_RST(ARG_rst_in);
  INST_m_rd_out_rv.reset_RST(ARG_rst_in);
  INST_m_rd_isRst_isInReset.reset_RST(ARG_rst_in);
  INST_m_rd_in_rv.reset_RST(ARG_rst_in);
}


/* Static handles to reset routines */


/* Functions for the parent module to register its reset fns */


/* Functions to set the elaborated clock id */

void MOD_mkAXIMultiplier_tb::set_clk_0(char const *s)
{
  __clk_handle_0 = bk_get_or_define_clock(sim_hdl, s);
}


/* State dumping routine */
void MOD_mkAXIMultiplier_tb::dump_state(unsigned int indent)
{
  printf("%*s%s:\n", indent, "", inst_name);
  INST_m_rd_araddrOut.dump_state(indent + 2u);
  INST_m_rd_arprotOut.dump_state(indent + 2u);
  INST_m_rd_arreadyIn.dump_state(indent + 2u);
  INST_m_rd_in_rv.dump_state(indent + 2u);
  INST_m_rd_isRst_isInReset.dump_state(indent + 2u);
  INST_m_rd_out_rv.dump_state(indent + 2u);
  INST_m_rd_rdataIn.dump_state(indent + 2u);
  INST_m_rd_rrespIn.dump_state(indent + 2u);
  INST_m_rd_rvalidIn.dump_state(indent + 2u);
  INST_m_wr_addrOut_rv.dump_state(indent + 2u);
  INST_m_wr_awaddrOut.dump_state(indent + 2u);
  INST_m_wr_awprotOut.dump_state(indent + 2u);
  INST_m_wr_awreadyIn.dump_state(indent + 2u);
  INST_m_wr_brespIn.dump_state(indent + 2u);
  INST_m_wr_bvalidIn.dump_state(indent + 2u);
  INST_m_wr_dataOut_rv.dump_state(indent + 2u);
  INST_m_wr_in_rv.dump_state(indent + 2u);
  INST_m_wr_isRst_isInReset.dump_state(indent + 2u);
  INST_m_wr_out_rv.dump_state(indent + 2u);
  INST_m_wr_wdataOut.dump_state(indent + 2u);
  INST_m_wr_wreadyIn.dump_state(indent + 2u);
  INST_m_wr_wstrbOut.dump_state(indent + 2u);
  INST_s_mul.dump_state(indent + 2u);
  INST_testState.dump_state(indent + 2u);
}


/* VCD dumping routines */

unsigned int MOD_mkAXIMultiplier_tb::dump_VCD_defs(unsigned int levels)
{
  vcd_write_scope_start(sim_hdl, inst_name);
  vcd_num = vcd_reserve_ids(sim_hdl, 53u);
  unsigned int num = vcd_num;
  for (unsigned int clk = 0u; clk < bk_num_clocks(sim_hdl); ++clk)
    vcd_add_clock_def(sim_hdl, this, bk_clock_name(sim_hdl, clk), bk_clock_vcd_num(sim_hdl, clk));
  vcd_write_def(sim_hdl, bk_clock_vcd_num(sim_hdl, __clk_handle_0), "CLK", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "NOT_m_rd_isRst_isInReset___d4", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "NOT_m_rd_out_rv_port0__read__1_BIT_66_2___d13", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "NOT_m_wr_isRst_isInReset_0___d39", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "NOT_m_wr_out_rv_port0__read__3_BIT_2_4___d55", 1u);
  vcd_write_def(sim_hdl, num++, "RST_N", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "_0_CONCAT_DONTCARE___d104", 3u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "_0_CONCAT_DONTCARE___d117", 67u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "_0_CONCAT_DONTCARE___d31", 108u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "_0_CONCAT_DONTCARE___d50", 73u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "_0_CONCAT_DONTCARE___d8", 36u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "_1_CONCAT_m_rd_rdataIn_wget__7_CONCAT_m_rd_rres_ETC___d19", 67u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "_1_CONCAT_m_wr_in_rv_port1__read__1_BITS_74_TO_3_5___d36", 73u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h4068", 8u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "m_rd_in_rv_port1__read_BIT_35___d3", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "m_rd_in_rv_port1__read____d2", 36u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "m_rd_isRst_isInReset__h119", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "m_rd_out_rv_port0__read____d11", 67u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "m_rd_out_rv_port1__read____d113", 67u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "m_wr_addrOut_rv_port1__read__7_BIT_35___d38", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "m_wr_addrOut_rv_port1__read____d37", 36u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "m_wr_dataOut_rv_port0__read____d26", 73u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "m_wr_dataOut_rv_port1__read__5_BIT_72___d46", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "m_wr_dataOut_rv_port1__read____d45", 73u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "m_wr_in_rv_port0__read____d92", 108u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "m_wr_in_rv_port1__read__1_BITS_74_TO_3___d35", 72u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "m_wr_in_rv_port1__read____d21", 108u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "m_wr_isRst_isInReset__h1294", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "m_wr_out_rv_port1__read__9_BITS_1_TO_0_05_EQ_0___d106", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "m_wr_out_rv_port1__read____d99", 3u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "testState_5_PLUS_1___d98", 8u);
  num = INST_m_rd_araddrOut.dump_VCD_defs(num);
  num = INST_m_rd_arprotOut.dump_VCD_defs(num);
  num = INST_m_rd_arreadyIn.dump_VCD_defs(num);
  num = INST_m_rd_in_rv.dump_VCD_defs(num);
  num = INST_m_rd_isRst_isInReset.dump_VCD_defs(num);
  num = INST_m_rd_out_rv.dump_VCD_defs(num);
  num = INST_m_rd_rdataIn.dump_VCD_defs(num);
  num = INST_m_rd_rrespIn.dump_VCD_defs(num);
  num = INST_m_rd_rvalidIn.dump_VCD_defs(num);
  num = INST_m_wr_addrOut_rv.dump_VCD_defs(num);
  num = INST_m_wr_awaddrOut.dump_VCD_defs(num);
  num = INST_m_wr_awprotOut.dump_VCD_defs(num);
  num = INST_m_wr_awreadyIn.dump_VCD_defs(num);
  num = INST_m_wr_brespIn.dump_VCD_defs(num);
  num = INST_m_wr_bvalidIn.dump_VCD_defs(num);
  num = INST_m_wr_dataOut_rv.dump_VCD_defs(num);
  num = INST_m_wr_in_rv.dump_VCD_defs(num);
  num = INST_m_wr_isRst_isInReset.dump_VCD_defs(num);
  num = INST_m_wr_out_rv.dump_VCD_defs(num);
  num = INST_m_wr_wdataOut.dump_VCD_defs(num);
  num = INST_m_wr_wreadyIn.dump_VCD_defs(num);
  num = INST_m_wr_wstrbOut.dump_VCD_defs(num);
  num = INST_testState.dump_VCD_defs(num);
  if (levels != 1u)
  {
    unsigned int l = levels == 0u ? 0u : levels - 1u;
    num = INST_s_mul.dump_VCD_defs(l);
  }
  vcd_write_scope_end(sim_hdl);
  return num;
}

void MOD_mkAXIMultiplier_tb::dump_VCD(tVCDDumpType dt,
				      unsigned int levels,
				      MOD_mkAXIMultiplier_tb &backing)
{
  vcd_defs(dt, backing);
  vcd_prims(dt, backing);
  if (levels != 1u)
    vcd_submodules(dt, levels - 1u, backing);
}

void MOD_mkAXIMultiplier_tb::vcd_defs(tVCDDumpType dt, MOD_mkAXIMultiplier_tb &backing)
{
  unsigned int num = vcd_num;
  if (dt == VCD_DUMP_XS)
  {
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 3u);
    vcd_write_x(sim_hdl, num++, 67u);
    vcd_write_x(sim_hdl, num++, 108u);
    vcd_write_x(sim_hdl, num++, 73u);
    vcd_write_x(sim_hdl, num++, 36u);
    vcd_write_x(sim_hdl, num++, 67u);
    vcd_write_x(sim_hdl, num++, 73u);
    vcd_write_x(sim_hdl, num++, 8u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 36u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 67u);
    vcd_write_x(sim_hdl, num++, 67u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 36u);
    vcd_write_x(sim_hdl, num++, 73u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 73u);
    vcd_write_x(sim_hdl, num++, 108u);
    vcd_write_x(sim_hdl, num++, 72u);
    vcd_write_x(sim_hdl, num++, 108u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 3u);
    vcd_write_x(sim_hdl, num++, 8u);
  }
  else
    if (dt == VCD_DUMP_CHANGES)
    {
      if ((backing.DEF_NOT_m_rd_isRst_isInReset___d4) != DEF_NOT_m_rd_isRst_isInReset___d4)
      {
	vcd_write_val(sim_hdl, num, DEF_NOT_m_rd_isRst_isInReset___d4, 1u);
	backing.DEF_NOT_m_rd_isRst_isInReset___d4 = DEF_NOT_m_rd_isRst_isInReset___d4;
      }
      ++num;
      if ((backing.DEF_NOT_m_rd_out_rv_port0__read__1_BIT_66_2___d13) != DEF_NOT_m_rd_out_rv_port0__read__1_BIT_66_2___d13)
      {
	vcd_write_val(sim_hdl, num, DEF_NOT_m_rd_out_rv_port0__read__1_BIT_66_2___d13, 1u);
	backing.DEF_NOT_m_rd_out_rv_port0__read__1_BIT_66_2___d13 = DEF_NOT_m_rd_out_rv_port0__read__1_BIT_66_2___d13;
      }
      ++num;
      if ((backing.DEF_NOT_m_wr_isRst_isInReset_0___d39) != DEF_NOT_m_wr_isRst_isInReset_0___d39)
      {
	vcd_write_val(sim_hdl, num, DEF_NOT_m_wr_isRst_isInReset_0___d39, 1u);
	backing.DEF_NOT_m_wr_isRst_isInReset_0___d39 = DEF_NOT_m_wr_isRst_isInReset_0___d39;
      }
      ++num;
      if ((backing.DEF_NOT_m_wr_out_rv_port0__read__3_BIT_2_4___d55) != DEF_NOT_m_wr_out_rv_port0__read__3_BIT_2_4___d55)
      {
	vcd_write_val(sim_hdl, num, DEF_NOT_m_wr_out_rv_port0__read__3_BIT_2_4___d55, 1u);
	backing.DEF_NOT_m_wr_out_rv_port0__read__3_BIT_2_4___d55 = DEF_NOT_m_wr_out_rv_port0__read__3_BIT_2_4___d55;
      }
      ++num;
      if ((backing.PORT_RST_N) != PORT_RST_N)
      {
	vcd_write_val(sim_hdl, num, PORT_RST_N, 1u);
	backing.PORT_RST_N = PORT_RST_N;
      }
      ++num;
      if ((backing.DEF__0_CONCAT_DONTCARE___d104) != DEF__0_CONCAT_DONTCARE___d104)
      {
	vcd_write_val(sim_hdl, num, DEF__0_CONCAT_DONTCARE___d104, 3u);
	backing.DEF__0_CONCAT_DONTCARE___d104 = DEF__0_CONCAT_DONTCARE___d104;
      }
      ++num;
      if ((backing.DEF__0_CONCAT_DONTCARE___d117) != DEF__0_CONCAT_DONTCARE___d117)
      {
	vcd_write_val(sim_hdl, num, DEF__0_CONCAT_DONTCARE___d117, 67u);
	backing.DEF__0_CONCAT_DONTCARE___d117 = DEF__0_CONCAT_DONTCARE___d117;
      }
      ++num;
      if ((backing.DEF__0_CONCAT_DONTCARE___d31) != DEF__0_CONCAT_DONTCARE___d31)
      {
	vcd_write_val(sim_hdl, num, DEF__0_CONCAT_DONTCARE___d31, 108u);
	backing.DEF__0_CONCAT_DONTCARE___d31 = DEF__0_CONCAT_DONTCARE___d31;
      }
      ++num;
      if ((backing.DEF__0_CONCAT_DONTCARE___d50) != DEF__0_CONCAT_DONTCARE___d50)
      {
	vcd_write_val(sim_hdl, num, DEF__0_CONCAT_DONTCARE___d50, 73u);
	backing.DEF__0_CONCAT_DONTCARE___d50 = DEF__0_CONCAT_DONTCARE___d50;
      }
      ++num;
      if ((backing.DEF__0_CONCAT_DONTCARE___d8) != DEF__0_CONCAT_DONTCARE___d8)
      {
	vcd_write_val(sim_hdl, num, DEF__0_CONCAT_DONTCARE___d8, 36u);
	backing.DEF__0_CONCAT_DONTCARE___d8 = DEF__0_CONCAT_DONTCARE___d8;
      }
      ++num;
      if ((backing.DEF__1_CONCAT_m_rd_rdataIn_wget__7_CONCAT_m_rd_rres_ETC___d19) != DEF__1_CONCAT_m_rd_rdataIn_wget__7_CONCAT_m_rd_rres_ETC___d19)
      {
	vcd_write_val(sim_hdl, num, DEF__1_CONCAT_m_rd_rdataIn_wget__7_CONCAT_m_rd_rres_ETC___d19, 67u);
	backing.DEF__1_CONCAT_m_rd_rdataIn_wget__7_CONCAT_m_rd_rres_ETC___d19 = DEF__1_CONCAT_m_rd_rdataIn_wget__7_CONCAT_m_rd_rres_ETC___d19;
      }
      ++num;
      if ((backing.DEF__1_CONCAT_m_wr_in_rv_port1__read__1_BITS_74_TO_3_5___d36) != DEF__1_CONCAT_m_wr_in_rv_port1__read__1_BITS_74_TO_3_5___d36)
      {
	vcd_write_val(sim_hdl, num, DEF__1_CONCAT_m_wr_in_rv_port1__read__1_BITS_74_TO_3_5___d36, 73u);
	backing.DEF__1_CONCAT_m_wr_in_rv_port1__read__1_BITS_74_TO_3_5___d36 = DEF__1_CONCAT_m_wr_in_rv_port1__read__1_BITS_74_TO_3_5___d36;
      }
      ++num;
      if ((backing.DEF_b__h4068) != DEF_b__h4068)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h4068, 8u);
	backing.DEF_b__h4068 = DEF_b__h4068;
      }
      ++num;
      if ((backing.DEF_m_rd_in_rv_port1__read_BIT_35___d3) != DEF_m_rd_in_rv_port1__read_BIT_35___d3)
      {
	vcd_write_val(sim_hdl, num, DEF_m_rd_in_rv_port1__read_BIT_35___d3, 1u);
	backing.DEF_m_rd_in_rv_port1__read_BIT_35___d3 = DEF_m_rd_in_rv_port1__read_BIT_35___d3;
      }
      ++num;
      if ((backing.DEF_m_rd_in_rv_port1__read____d2) != DEF_m_rd_in_rv_port1__read____d2)
      {
	vcd_write_val(sim_hdl, num, DEF_m_rd_in_rv_port1__read____d2, 36u);
	backing.DEF_m_rd_in_rv_port1__read____d2 = DEF_m_rd_in_rv_port1__read____d2;
      }
      ++num;
      if ((backing.DEF_m_rd_isRst_isInReset__h119) != DEF_m_rd_isRst_isInReset__h119)
      {
	vcd_write_val(sim_hdl, num, DEF_m_rd_isRst_isInReset__h119, 1u);
	backing.DEF_m_rd_isRst_isInReset__h119 = DEF_m_rd_isRst_isInReset__h119;
      }
      ++num;
      if ((backing.DEF_m_rd_out_rv_port0__read____d11) != DEF_m_rd_out_rv_port0__read____d11)
      {
	vcd_write_val(sim_hdl, num, DEF_m_rd_out_rv_port0__read____d11, 67u);
	backing.DEF_m_rd_out_rv_port0__read____d11 = DEF_m_rd_out_rv_port0__read____d11;
      }
      ++num;
      if ((backing.DEF_m_rd_out_rv_port1__read____d113) != DEF_m_rd_out_rv_port1__read____d113)
      {
	vcd_write_val(sim_hdl, num, DEF_m_rd_out_rv_port1__read____d113, 67u);
	backing.DEF_m_rd_out_rv_port1__read____d113 = DEF_m_rd_out_rv_port1__read____d113;
      }
      ++num;
      if ((backing.DEF_m_wr_addrOut_rv_port1__read__7_BIT_35___d38) != DEF_m_wr_addrOut_rv_port1__read__7_BIT_35___d38)
      {
	vcd_write_val(sim_hdl, num, DEF_m_wr_addrOut_rv_port1__read__7_BIT_35___d38, 1u);
	backing.DEF_m_wr_addrOut_rv_port1__read__7_BIT_35___d38 = DEF_m_wr_addrOut_rv_port1__read__7_BIT_35___d38;
      }
      ++num;
      if ((backing.DEF_m_wr_addrOut_rv_port1__read____d37) != DEF_m_wr_addrOut_rv_port1__read____d37)
      {
	vcd_write_val(sim_hdl, num, DEF_m_wr_addrOut_rv_port1__read____d37, 36u);
	backing.DEF_m_wr_addrOut_rv_port1__read____d37 = DEF_m_wr_addrOut_rv_port1__read____d37;
      }
      ++num;
      if ((backing.DEF_m_wr_dataOut_rv_port0__read____d26) != DEF_m_wr_dataOut_rv_port0__read____d26)
      {
	vcd_write_val(sim_hdl, num, DEF_m_wr_dataOut_rv_port0__read____d26, 73u);
	backing.DEF_m_wr_dataOut_rv_port0__read____d26 = DEF_m_wr_dataOut_rv_port0__read____d26;
      }
      ++num;
      if ((backing.DEF_m_wr_dataOut_rv_port1__read__5_BIT_72___d46) != DEF_m_wr_dataOut_rv_port1__read__5_BIT_72___d46)
      {
	vcd_write_val(sim_hdl, num, DEF_m_wr_dataOut_rv_port1__read__5_BIT_72___d46, 1u);
	backing.DEF_m_wr_dataOut_rv_port1__read__5_BIT_72___d46 = DEF_m_wr_dataOut_rv_port1__read__5_BIT_72___d46;
      }
      ++num;
      if ((backing.DEF_m_wr_dataOut_rv_port1__read____d45) != DEF_m_wr_dataOut_rv_port1__read____d45)
      {
	vcd_write_val(sim_hdl, num, DEF_m_wr_dataOut_rv_port1__read____d45, 73u);
	backing.DEF_m_wr_dataOut_rv_port1__read____d45 = DEF_m_wr_dataOut_rv_port1__read____d45;
      }
      ++num;
      if ((backing.DEF_m_wr_in_rv_port0__read____d92) != DEF_m_wr_in_rv_port0__read____d92)
      {
	vcd_write_val(sim_hdl, num, DEF_m_wr_in_rv_port0__read____d92, 108u);
	backing.DEF_m_wr_in_rv_port0__read____d92 = DEF_m_wr_in_rv_port0__read____d92;
      }
      ++num;
      if ((backing.DEF_m_wr_in_rv_port1__read__1_BITS_74_TO_3___d35) != DEF_m_wr_in_rv_port1__read__1_BITS_74_TO_3___d35)
      {
	vcd_write_val(sim_hdl, num, DEF_m_wr_in_rv_port1__read__1_BITS_74_TO_3___d35, 72u);
	backing.DEF_m_wr_in_rv_port1__read__1_BITS_74_TO_3___d35 = DEF_m_wr_in_rv_port1__read__1_BITS_74_TO_3___d35;
      }
      ++num;
      if ((backing.DEF_m_wr_in_rv_port1__read____d21) != DEF_m_wr_in_rv_port1__read____d21)
      {
	vcd_write_val(sim_hdl, num, DEF_m_wr_in_rv_port1__read____d21, 108u);
	backing.DEF_m_wr_in_rv_port1__read____d21 = DEF_m_wr_in_rv_port1__read____d21;
      }
      ++num;
      if ((backing.DEF_m_wr_isRst_isInReset__h1294) != DEF_m_wr_isRst_isInReset__h1294)
      {
	vcd_write_val(sim_hdl, num, DEF_m_wr_isRst_isInReset__h1294, 1u);
	backing.DEF_m_wr_isRst_isInReset__h1294 = DEF_m_wr_isRst_isInReset__h1294;
      }
      ++num;
      if ((backing.DEF_m_wr_out_rv_port1__read__9_BITS_1_TO_0_05_EQ_0___d106) != DEF_m_wr_out_rv_port1__read__9_BITS_1_TO_0_05_EQ_0___d106)
      {
	vcd_write_val(sim_hdl, num, DEF_m_wr_out_rv_port1__read__9_BITS_1_TO_0_05_EQ_0___d106, 1u);
	backing.DEF_m_wr_out_rv_port1__read__9_BITS_1_TO_0_05_EQ_0___d106 = DEF_m_wr_out_rv_port1__read__9_BITS_1_TO_0_05_EQ_0___d106;
      }
      ++num;
      if ((backing.DEF_m_wr_out_rv_port1__read____d99) != DEF_m_wr_out_rv_port1__read____d99)
      {
	vcd_write_val(sim_hdl, num, DEF_m_wr_out_rv_port1__read____d99, 3u);
	backing.DEF_m_wr_out_rv_port1__read____d99 = DEF_m_wr_out_rv_port1__read____d99;
      }
      ++num;
      if ((backing.DEF_testState_5_PLUS_1___d98) != DEF_testState_5_PLUS_1___d98)
      {
	vcd_write_val(sim_hdl, num, DEF_testState_5_PLUS_1___d98, 8u);
	backing.DEF_testState_5_PLUS_1___d98 = DEF_testState_5_PLUS_1___d98;
      }
      ++num;
    }
    else
    {
      vcd_write_val(sim_hdl, num++, DEF_NOT_m_rd_isRst_isInReset___d4, 1u);
      backing.DEF_NOT_m_rd_isRst_isInReset___d4 = DEF_NOT_m_rd_isRst_isInReset___d4;
      vcd_write_val(sim_hdl, num++, DEF_NOT_m_rd_out_rv_port0__read__1_BIT_66_2___d13, 1u);
      backing.DEF_NOT_m_rd_out_rv_port0__read__1_BIT_66_2___d13 = DEF_NOT_m_rd_out_rv_port0__read__1_BIT_66_2___d13;
      vcd_write_val(sim_hdl, num++, DEF_NOT_m_wr_isRst_isInReset_0___d39, 1u);
      backing.DEF_NOT_m_wr_isRst_isInReset_0___d39 = DEF_NOT_m_wr_isRst_isInReset_0___d39;
      vcd_write_val(sim_hdl, num++, DEF_NOT_m_wr_out_rv_port0__read__3_BIT_2_4___d55, 1u);
      backing.DEF_NOT_m_wr_out_rv_port0__read__3_BIT_2_4___d55 = DEF_NOT_m_wr_out_rv_port0__read__3_BIT_2_4___d55;
      vcd_write_val(sim_hdl, num++, PORT_RST_N, 1u);
      backing.PORT_RST_N = PORT_RST_N;
      vcd_write_val(sim_hdl, num++, DEF__0_CONCAT_DONTCARE___d104, 3u);
      backing.DEF__0_CONCAT_DONTCARE___d104 = DEF__0_CONCAT_DONTCARE___d104;
      vcd_write_val(sim_hdl, num++, DEF__0_CONCAT_DONTCARE___d117, 67u);
      backing.DEF__0_CONCAT_DONTCARE___d117 = DEF__0_CONCAT_DONTCARE___d117;
      vcd_write_val(sim_hdl, num++, DEF__0_CONCAT_DONTCARE___d31, 108u);
      backing.DEF__0_CONCAT_DONTCARE___d31 = DEF__0_CONCAT_DONTCARE___d31;
      vcd_write_val(sim_hdl, num++, DEF__0_CONCAT_DONTCARE___d50, 73u);
      backing.DEF__0_CONCAT_DONTCARE___d50 = DEF__0_CONCAT_DONTCARE___d50;
      vcd_write_val(sim_hdl, num++, DEF__0_CONCAT_DONTCARE___d8, 36u);
      backing.DEF__0_CONCAT_DONTCARE___d8 = DEF__0_CONCAT_DONTCARE___d8;
      vcd_write_val(sim_hdl, num++, DEF__1_CONCAT_m_rd_rdataIn_wget__7_CONCAT_m_rd_rres_ETC___d19, 67u);
      backing.DEF__1_CONCAT_m_rd_rdataIn_wget__7_CONCAT_m_rd_rres_ETC___d19 = DEF__1_CONCAT_m_rd_rdataIn_wget__7_CONCAT_m_rd_rres_ETC___d19;
      vcd_write_val(sim_hdl, num++, DEF__1_CONCAT_m_wr_in_rv_port1__read__1_BITS_74_TO_3_5___d36, 73u);
      backing.DEF__1_CONCAT_m_wr_in_rv_port1__read__1_BITS_74_TO_3_5___d36 = DEF__1_CONCAT_m_wr_in_rv_port1__read__1_BITS_74_TO_3_5___d36;
      vcd_write_val(sim_hdl, num++, DEF_b__h4068, 8u);
      backing.DEF_b__h4068 = DEF_b__h4068;
      vcd_write_val(sim_hdl, num++, DEF_m_rd_in_rv_port1__read_BIT_35___d3, 1u);
      backing.DEF_m_rd_in_rv_port1__read_BIT_35___d3 = DEF_m_rd_in_rv_port1__read_BIT_35___d3;
      vcd_write_val(sim_hdl, num++, DEF_m_rd_in_rv_port1__read____d2, 36u);
      backing.DEF_m_rd_in_rv_port1__read____d2 = DEF_m_rd_in_rv_port1__read____d2;
      vcd_write_val(sim_hdl, num++, DEF_m_rd_isRst_isInReset__h119, 1u);
      backing.DEF_m_rd_isRst_isInReset__h119 = DEF_m_rd_isRst_isInReset__h119;
      vcd_write_val(sim_hdl, num++, DEF_m_rd_out_rv_port0__read____d11, 67u);
      backing.DEF_m_rd_out_rv_port0__read____d11 = DEF_m_rd_out_rv_port0__read____d11;
      vcd_write_val(sim_hdl, num++, DEF_m_rd_out_rv_port1__read____d113, 67u);
      backing.DEF_m_rd_out_rv_port1__read____d113 = DEF_m_rd_out_rv_port1__read____d113;
      vcd_write_val(sim_hdl, num++, DEF_m_wr_addrOut_rv_port1__read__7_BIT_35___d38, 1u);
      backing.DEF_m_wr_addrOut_rv_port1__read__7_BIT_35___d38 = DEF_m_wr_addrOut_rv_port1__read__7_BIT_35___d38;
      vcd_write_val(sim_hdl, num++, DEF_m_wr_addrOut_rv_port1__read____d37, 36u);
      backing.DEF_m_wr_addrOut_rv_port1__read____d37 = DEF_m_wr_addrOut_rv_port1__read____d37;
      vcd_write_val(sim_hdl, num++, DEF_m_wr_dataOut_rv_port0__read____d26, 73u);
      backing.DEF_m_wr_dataOut_rv_port0__read____d26 = DEF_m_wr_dataOut_rv_port0__read____d26;
      vcd_write_val(sim_hdl, num++, DEF_m_wr_dataOut_rv_port1__read__5_BIT_72___d46, 1u);
      backing.DEF_m_wr_dataOut_rv_port1__read__5_BIT_72___d46 = DEF_m_wr_dataOut_rv_port1__read__5_BIT_72___d46;
      vcd_write_val(sim_hdl, num++, DEF_m_wr_dataOut_rv_port1__read____d45, 73u);
      backing.DEF_m_wr_dataOut_rv_port1__read____d45 = DEF_m_wr_dataOut_rv_port1__read____d45;
      vcd_write_val(sim_hdl, num++, DEF_m_wr_in_rv_port0__read____d92, 108u);
      backing.DEF_m_wr_in_rv_port0__read____d92 = DEF_m_wr_in_rv_port0__read____d92;
      vcd_write_val(sim_hdl, num++, DEF_m_wr_in_rv_port1__read__1_BITS_74_TO_3___d35, 72u);
      backing.DEF_m_wr_in_rv_port1__read__1_BITS_74_TO_3___d35 = DEF_m_wr_in_rv_port1__read__1_BITS_74_TO_3___d35;
      vcd_write_val(sim_hdl, num++, DEF_m_wr_in_rv_port1__read____d21, 108u);
      backing.DEF_m_wr_in_rv_port1__read____d21 = DEF_m_wr_in_rv_port1__read____d21;
      vcd_write_val(sim_hdl, num++, DEF_m_wr_isRst_isInReset__h1294, 1u);
      backing.DEF_m_wr_isRst_isInReset__h1294 = DEF_m_wr_isRst_isInReset__h1294;
      vcd_write_val(sim_hdl, num++, DEF_m_wr_out_rv_port1__read__9_BITS_1_TO_0_05_EQ_0___d106, 1u);
      backing.DEF_m_wr_out_rv_port1__read__9_BITS_1_TO_0_05_EQ_0___d106 = DEF_m_wr_out_rv_port1__read__9_BITS_1_TO_0_05_EQ_0___d106;
      vcd_write_val(sim_hdl, num++, DEF_m_wr_out_rv_port1__read____d99, 3u);
      backing.DEF_m_wr_out_rv_port1__read____d99 = DEF_m_wr_out_rv_port1__read____d99;
      vcd_write_val(sim_hdl, num++, DEF_testState_5_PLUS_1___d98, 8u);
      backing.DEF_testState_5_PLUS_1___d98 = DEF_testState_5_PLUS_1___d98;
    }
}

void MOD_mkAXIMultiplier_tb::vcd_prims(tVCDDumpType dt, MOD_mkAXIMultiplier_tb &backing)
{
  INST_m_rd_araddrOut.dump_VCD(dt, backing.INST_m_rd_araddrOut);
  INST_m_rd_arprotOut.dump_VCD(dt, backing.INST_m_rd_arprotOut);
  INST_m_rd_arreadyIn.dump_VCD(dt, backing.INST_m_rd_arreadyIn);
  INST_m_rd_in_rv.dump_VCD(dt, backing.INST_m_rd_in_rv);
  INST_m_rd_isRst_isInReset.dump_VCD(dt, backing.INST_m_rd_isRst_isInReset);
  INST_m_rd_out_rv.dump_VCD(dt, backing.INST_m_rd_out_rv);
  INST_m_rd_rdataIn.dump_VCD(dt, backing.INST_m_rd_rdataIn);
  INST_m_rd_rrespIn.dump_VCD(dt, backing.INST_m_rd_rrespIn);
  INST_m_rd_rvalidIn.dump_VCD(dt, backing.INST_m_rd_rvalidIn);
  INST_m_wr_addrOut_rv.dump_VCD(dt, backing.INST_m_wr_addrOut_rv);
  INST_m_wr_awaddrOut.dump_VCD(dt, backing.INST_m_wr_awaddrOut);
  INST_m_wr_awprotOut.dump_VCD(dt, backing.INST_m_wr_awprotOut);
  INST_m_wr_awreadyIn.dump_VCD(dt, backing.INST_m_wr_awreadyIn);
  INST_m_wr_brespIn.dump_VCD(dt, backing.INST_m_wr_brespIn);
  INST_m_wr_bvalidIn.dump_VCD(dt, backing.INST_m_wr_bvalidIn);
  INST_m_wr_dataOut_rv.dump_VCD(dt, backing.INST_m_wr_dataOut_rv);
  INST_m_wr_in_rv.dump_VCD(dt, backing.INST_m_wr_in_rv);
  INST_m_wr_isRst_isInReset.dump_VCD(dt, backing.INST_m_wr_isRst_isInReset);
  INST_m_wr_out_rv.dump_VCD(dt, backing.INST_m_wr_out_rv);
  INST_m_wr_wdataOut.dump_VCD(dt, backing.INST_m_wr_wdataOut);
  INST_m_wr_wreadyIn.dump_VCD(dt, backing.INST_m_wr_wreadyIn);
  INST_m_wr_wstrbOut.dump_VCD(dt, backing.INST_m_wr_wstrbOut);
  INST_testState.dump_VCD(dt, backing.INST_testState);
}

void MOD_mkAXIMultiplier_tb::vcd_submodules(tVCDDumpType dt,
					    unsigned int levels,
					    MOD_mkAXIMultiplier_tb &backing)
{
  INST_s_mul.dump_VCD(dt, levels, backing.INST_s_mul);
}
